
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: CypherUser
      POSTGRES_PASSWORD: adminpass
      POSTGRES_DB: CypherDB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik-network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.com
      PGADMIN_DEFAULT_PASSWORD: Not24Get
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

  traefik:
    image: traefik:v3.1
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-network
  
  java:
    image: ghcr.io/tpcypher/back/app:latest
    container_name: java_app
    pull_policy: always
    working_dir: /app
    volumes:
      - ./java-app:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back.rule=Host(`back.localhost`)"
      - "traefik.http.routers.back.entrypoints=web"
      - "traefik.http.services.back.loadbalancer.server.port=8081"
    depends_on:
      - postgres
    networks:
      - traefik-network

  front-app:
    image: ghcr.io/tpcypher/front/app:latest
    pull_policy: always
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`front.localhost`)"
      - "traefik.http.routers.front.entrypoints=web"
      - "traefik.http.services.front.loadbalancer.server.port=3000"
    depends_on:
      - java
    networks:
      - traefik-network

volumes:
  postgres_data:
    driver: local
  java_app_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  traefik-network:
    external: false
    name: traefik-network